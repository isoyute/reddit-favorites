{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","store/actions/favoritesActions.js","store/actions/resultsActions.js","store/middlewares.js","components/SearchBar.js","components/Post.js","components/Posts.js","components/Content.js","App.js","store/reducers/resultsReducer.js","store/reducers/favoritesReducer.js","store/index.js","index.js"],"names":["Header","className","Footer","Layout","children","size","SET_FAVORITES","ADD_FAVORITE","REMOVE_FAVORITE","SET_POSTS","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","SET_POST_FAVORITE","setPostFavorite","postID","isFavorited","type","payload","updateLocalStorage","favorites","localStorage","setItem","JSON","stringify","setFavoritePosts","posts","dispatch","addFavoritePost","post","getState","addFavorite","id","removeFavoritePost","removeFavorite","fetchPosts","subreddit","axios","get","then","res","data","filter","stickied","map","title","url","permalink","picture","thumbnail","getPostsSuccess","console","log","forEach","catch","error","SearchBar","useState","setSubreddit","useSelector","state","results","useDispatch","value","onChange","e","target","onKeyDown","key","icon","placeholder","width","label","filled","Post","useToasts","setToast","hasThumbnail","align","span","src","alt","href","rel","onClick","isNowFavorited","text","Posts","isFavorites","noPostsText","justify","length","Content","isSearching","useEffect","storedFavorites","getItem","parse","initialValue","hideDivider","Item","App","initialState","handleSetPosts","handleGetPostsRequest","handleGetPostsSuccess","handleGetPostsFailure","handleSetPostIsFavorite","reducer","action","handleSetFavorites","handleAddFavorite","handleRemoveFavorite","combineReducers","resultsReducer","favoritesReducer","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","themeType","document","getElementById"],"mappings":"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","file":"static/js/main.9666426a.chunk.js","sourcesContent":["import { Page } from '@geist-ui/react';\n\nconst Header = () => {\n    return (\n        <Page.Header className='header'>\n            <h2>Reddit Favorites</h2>\n        </Page.Header>\n    );\n};\n\nexport default Header;\n","import { Page } from '@geist-ui/react';\nimport '../styles/Footer.css';\n\nconst Footer = () => {\n    return (\n        <Page.Footer className='footer'>\n            <p>Website created by Tudor Lupu</p>\n        </Page.Footer>\n    );\n};\n\nexport default Footer;\n","import { Page } from '@geist-ui/react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst Layout = ({ children }) => {\n    return (\n        <Page size='large'>\n            <Header />\n            {children}\n            <Footer />\n        </Page>\n    );\n};\n\nexport default Layout;\n","// SETS ALL FAVORITES\nexport const SET_FAVORITES = 'SET_FAVORITES';\nexport const setFavorites = favorites => ({ type: SET_FAVORITES, favorites });\n\n// SETTING AND REMOVING INDIVIDUAL FAVORITED POSTS\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const addFavorite = post => ({ type: ADD_FAVORITE, post });\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\nexport const removeFavorite = postID => ({ type: REMOVE_FAVORITE, postID });\n","// SETS ALL POSTS\nexport const SET_POSTS = 'SET_POSTS';\nexport const setPosts = posts => ({ type: SET_POSTS, posts });\n\n// REDDIT POST QUERYING\nexport const GET_POSTS_REQUEST = 'GET_POSTS_REQUEST';\nexport const getPostsRequest = () => ({ type: GET_POSTS_REQUEST });\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const getPostsSuccess = posts => ({ type: GET_POSTS_SUCCESS, posts });\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE';\nexport const getPostsFailure = error => ({ type: GET_POSTS_FAILURE, error });\n\n// TOGGLING A POST FAVORITE STATE\nexport const SET_POST_FAVORITE = 'SET_POST_FAVORITE';\nexport const setPostFavorite = (postID, isFavorited) => ({\n\ttype: SET_POST_FAVORITE,\n\tpayload: {\n\t\tpostID,\n\t\tisFavorited,\n\t},\n});\n","import {\n\taddFavorite,\n\tremoveFavorite,\n\tsetFavorites,\n} from './actions/favoritesActions';\nimport {\n\tgetPostsRequest,\n\tgetPostsSuccess,\n\tgetPostsFailure,\n\tsetPostFavorite,\n} from './actions/resultsActions';\nimport axios from 'axios';\n\nconst updateLocalStorage = favorites => {\n\tlocalStorage.setItem('favorites', JSON.stringify(favorites));\n};\n\nexport const setFavoritePosts = posts => dispatch => {\n\tdispatch(setFavorites(posts));\n};\n\nexport const addFavoritePost = post => (dispatch, getState) => {\n\tdispatch(addFavorite(post));\n\tdispatch(setPostFavorite(post.id, true));\n\tupdateLocalStorage(getState().favorites.posts);\n};\n\nexport const removeFavoritePost = postID => (dispatch, getState) => {\n\tdispatch(removeFavorite(postID));\n\tdispatch(setPostFavorite(postID, false));\n\tupdateLocalStorage(getState().favorites.posts);\n};\n\nexport const fetchPosts = subreddit => (dispatch, getState) => {\n\tdispatch(getPostsRequest());\n\n\taxios\n\t\t.get(`https://www.reddit.com/r/${subreddit}/hot.json?limit=10`)\n\t\t.then(res => res.data)\n\t\t.then(data =>\n\t\t\tdata.data.children\n\t\t\t\t.filter(post => !post.data.stickied)\n\t\t\t\t.map(post => ({\n\t\t\t\t\tid: post.data.id,\n\t\t\t\t\ttitle: post.data.title,\n\t\t\t\t\turl: `https://www.reddit.com${post.data.permalink}`,\n\t\t\t\t\tpicture: post.data.thumbnail,\n\t\t\t\t\tisFavorited: false,\n\t\t\t\t}))\n\t\t)\n\t\t.then(posts => {\n\t\t\tdispatch(getPostsSuccess(posts));\n\t\t\tconsole.log(posts);\n\n\t\t\t// make sure if any favorited posts are in the retrieved list that they are set to favorited\n\t\t\t[...getState().favorites.posts].forEach(post =>\n\t\t\t\tdispatch(setPostFavorite(post.id, true))\n\t\t\t);\n\t\t})\n\t\t.catch(() =>\n\t\t\tdispatch(\n\t\t\t\tgetPostsFailure(\n\t\t\t\t\t'Could not retrieve posts from subreddit. Check the spelling and try again!'\n\t\t\t\t)\n\t\t\t)\n\t\t);\n};\n","import { useState } from 'react';\nimport { Row, Input, Note } from '@geist-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Search as SearchIcon } from '@geist-ui/react-icons';\nimport { fetchPosts } from '../store/middlewares';\nimport '../styles/SearchBar.css';\n\nconst SearchBar = () => {\n\tconst [subreddit, setSubreddit] = useState('');\n\tconst error = useSelector(state => state.results.error);\n\n\tconst dispatch = useDispatch();\n\n\tconst handleUpdatePosts = e => {\n\t\tif (e.key === 'Enter' && subreddit) {\n\t\t\tdispatch(fetchPosts(subreddit));\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row className='search subreddit'>\n\t\t\t\t<Input\n\t\t\t\t\tvalue={subreddit}\n\t\t\t\t\tonChange={e => setSubreddit(e.target.value)}\n\t\t\t\t\tonKeyDown={handleUpdatePosts}\n\t\t\t\t\ticon={<SearchIcon />}\n\t\t\t\t\tplaceholder=\"subreddit's name\"\n\t\t\t\t\tsize='large'\n\t\t\t\t\twidth='100%'\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t\t{error && (\n\t\t\t\t<Note type='error' label='error' filled>\n\t\t\t\t\tCould not retrieve posts from subreddit. Try again!\n\t\t\t\t</Note>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default SearchBar;\n","import { useDispatch } from 'react-redux';\nimport { Row, Col, Card, useToasts } from '@geist-ui/react';\nimport { Heart, HeartFill } from '@geist-ui/react-icons';\nimport { addFavoritePost, removeFavoritePost } from '../store/middlewares';\nimport '../styles/Post.css';\n\nconst Post = ({ post }) => {\n\tconst [, setToast] = useToasts();\n\n\tconst dispatch = useDispatch();\n\n\tconst favoritePost = () => {\n\t\tconst isNowFavorited = !post.isFavorited;\n\n\t\tif (isNowFavorited) {\n\t\t\tdispatch(addFavoritePost({ ...post, isFavorited: true }));\n\t\t} else {\n\t\t\tdispatch(removeFavoritePost(post.id));\n\t\t}\n\n\t\tsetToast({\n\t\t\ttext: isNowFavorited ? 'Post favorited.' : 'Post unfavorited.',\n\t\t\ttype: isNowFavorited ? 'success' : 'error',\n\t\t});\n\t};\n\n\tconst hasThumbnail = post.picture && post.picture !== 'self';\n\n\treturn (\n\t\t<Row className='search post'>\n\t\t\t<Card>\n\t\t\t\t<Row align='middle'>\n\t\t\t\t\t{hasThumbnail && (\n\t\t\t\t\t\t<Col className='thumbnail' span={5}>\n\t\t\t\t\t\t\t<img src={post.picture} alt='thumbnail' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t\t<Col className='content' span={hasThumbnail ? 18 : 23}>\n\t\t\t\t\t\t<h4>{post.title}</h4>\n\t\t\t\t\t\t<a href={post.url} target='_blank' rel='noreferrer'>\n\t\t\t\t\t\t\t<p>{post.url}</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col span={1}>\n\t\t\t\t\t\t<span className='favorite icon' onClick={favoritePost}>\n\t\t\t\t\t\t\t{post.isFavorited ? <HeartFill /> : <Heart />}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card>\n\t\t</Row>\n\t);\n};\n\nexport default Post;\n","import { Col, Row } from '@geist-ui/react';\nimport Post from './Post';\nimport '../styles/Posts.css';\n\nconst Posts = ({ posts, type }) => {\n\tconst isFavorites = type === 'favorites';\n\tconst noPostsText = isFavorites\n\t\t? 'list of favorites is empty'\n\t\t: 'nothing to see here.';\n\n\treturn (\n\t\t<Row className='search posts' justify='center'>\n\t\t\t{posts && posts.length > 0 ? (\n\t\t\t\t<Col>\n\t\t\t\t\t{!isFavorites && <p>{posts.length} posts found ...</p>}\n\t\t\t\t\t{posts.map(post => (\n\t\t\t\t\t\t<Post key={post.id} post={post} />\n\t\t\t\t\t))}\n\t\t\t\t</Col>\n\t\t\t) : (\n\t\t\t\t<Col className='search not-found'>{noPostsText}</Col>\n\t\t\t)}\n\t\t</Row>\n\t);\n};\n\nexport default Posts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFavoritePosts } from '../store/middlewares';\nimport { Page, Tabs, Spinner } from '@geist-ui/react';\nimport SearchBar from './SearchBar';\nimport Posts from './Posts';\nimport { useEffect } from 'react';\n\nconst Content = () => {\n\tconst posts = useSelector(state => state.results.posts);\n\tconst favorites = useSelector(state => state.favorites.posts);\n\tconst isSearching = useSelector(state => state.results.isSearching);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t// check to see if there are any favorites in local storage\n\t\tconst storedFavorites = localStorage.getItem('favorites');\n\t\tif (storedFavorites) {\n\t\t\tdispatch(setFavoritePosts(JSON.parse(storedFavorites)));\n\t\t}\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Page.Content className='content'>\n\t\t\t<Tabs initialValue='search' hideDivider>\n\t\t\t\t<Tabs.Item label='Search' value='search'>\n\t\t\t\t\t<SearchBar />\n\t\t\t\t\t{isSearching ? <Spinner size='large' /> : <Posts posts={posts} />}\n\t\t\t\t</Tabs.Item>\n\t\t\t\t<Tabs.Item label='Favorites' value='favorites'>\n\t\t\t\t\t<Posts type='favorites' posts={favorites} />\n\t\t\t\t</Tabs.Item>\n\t\t\t</Tabs>\n\t\t</Page.Content>\n\t);\n};\n\nexport default Content;\n","import Layout from './components/Layout';\nimport Content from './components/Content';\n\nconst App = () => {\n    return (\n        <div className='app'>\n            <Layout>\n                <Content />\n            </Layout>\n        </div>\n    );\n};\n\nexport default App;\n","import {\n\tSET_POSTS,\n\tGET_POSTS_REQUEST,\n\tGET_POSTS_SUCCESS,\n\tGET_POSTS_FAILURE,\n\tSET_POST_FAVORITE,\n} from '../actions/resultsActions';\n\nconst initialState = {\n\tposts: [],\n\terror: null,\n\tisSearching: false,\n};\n\nconst handleSetPosts = posts => ({ ...initialState, posts });\n\nconst handleGetPostsRequest = () => ({ ...initialState, isSearching: true });\nconst handleGetPostsSuccess = posts => ({ ...initialState, posts });\nconst handleGetPostsFailure = error => ({ ...initialState, error });\n\nconst handleSetPostIsFavorite = (state, postID, isFavorited) => {\n\tconst posts = [...state.posts].map(post => {\n\t\tif (post.id === postID) {\n\t\t\tpost.isFavorited = isFavorited;\n\t\t}\n\n\t\treturn post;\n\t});\n\n\treturn { ...state, posts };\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_POSTS:\n\t\t\treturn handleSetPosts(action.posts);\n\t\tcase GET_POSTS_REQUEST:\n\t\t\treturn handleGetPostsRequest();\n\t\tcase GET_POSTS_SUCCESS:\n\t\t\treturn handleGetPostsSuccess(action.posts);\n\t\tcase GET_POSTS_FAILURE:\n\t\t\treturn handleGetPostsFailure(action.error);\n\t\tcase SET_POST_FAVORITE:\n\t\t\treturn handleSetPostIsFavorite(\n\t\t\t\tstate,\n\t\t\t\taction.payload.postID,\n\t\t\t\taction.payload.isFavorited\n\t\t\t);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import {\n\tSET_FAVORITES,\n\tADD_FAVORITE,\n\tREMOVE_FAVORITE,\n} from '../actions/favoritesActions';\n\nconst initialState = {\n\tposts: [],\n};\n\nconst handleSetFavorites = posts => ({ posts });\n\nconst handleAddFavorite = (state, post) => ({ posts: [...state.posts, post] });\nconst handleRemoveFavorite = (state, postID) => ({\n\tposts: [...state.posts].filter(post => post.id !== postID),\n});\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_FAVORITES:\n\t\t\treturn handleSetFavorites(action.favorites);\n\t\tcase ADD_FAVORITE:\n\t\t\treturn handleAddFavorite(state, action.post);\n\t\tcase REMOVE_FAVORITE:\n\t\t\treturn handleRemoveFavorite(state, action.postID);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport resultsReducer from './reducers/resultsReducer';\nimport favoritesReducer from './reducers/favoritesReducer';\n\nconst reducer = combineReducers({\n\tresults: resultsReducer,\n\tfavorites: favoritesReducer,\n});\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GeistProvider, CssBaseline } from '@geist-ui/react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GeistProvider themeType='dark'>\n\t\t\t<CssBaseline />\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</GeistProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}